# Stage 1: Build
FROM node:lts-alpine AS builder
WORKDIR /app
COPY package*.json ./
RUN npm install --silent
COPY . .

ARG AUTH_SECRET
ARG AUTH_TRUST_HOST
ARG GOOGLE_CLIENT_ID
ARG GOOGLE_CLIENT_SECRET
ARG BACKUP_FOLDER_ID
ARG SERVICE_ACCOUNT_KEY
ARG SERVICE_ACCOUNT_KEY_PATH
ARG IGNORE_BUILD_ERRORS
ARG FAKE_AUTH
ARG MYSQL_HOST
ARG MYSQL_PORT
ARG MYSQL_DATABASE
ARG MYSQL_USER
ARG MYSQL_PASSWORD
ARG ENCRYPTION_PASSWORD
ARG NEXT_PUBLIC_SUPABASE_URL
ARG NEXT_PUBLIC_SUPABASE_ANON_KEY
ARG SUPABASE_SERVICE_ROLE_KEY
ARG PUBLIC_VAPID_KEY
ARG PRIVATE_VAPID_KEY

ENV AUTH_SECRET=$AUTH_SECRET
ENV AUTH_TRUST_HOST=$AUTH_TRUST_HOST
ENV GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID
ENV GOOGLE_CLIENT_SECRET=$GOOGLE_CLIENT_SECRET
ENV BACKUP_FOLDER_ID=$BACKUP_FOLDER_ID
ENV SERVICE_ACCOUNT_KEY=$SERVICE_ACCOUNT_KEY
ENV SERVICE_ACCOUNT_KEY_PATH=$SERVICE_ACCOUNT_KEY_PATH
ENV IGNORE_BUILD_ERRORS=$IGNORE_BUILD_ERRORS
ENV FAKE_AUTH=$FAKE_AUTH
ENV MYSQL_HOST=$MYSQL_HOST
ENV MYSQL_PORT=$MYSQL_PORT
ENV MYSQL_DATABASE=$MYSQL_DATABASE
ENV MYSQL_USER=$MYSQL_USER
ENV MYSQL_PASSWORD=$MYSQL_PASSWORD
ENV ENCRYPTION_PASSWORD=$ENCRYPTION_PASSWORD
ENV NEXT_PUBLIC_SUPABASE_URL=$NEXT_PUBLIC_SUPABASE_URL
ENV NEXT_PUBLIC_SUPABASE_ANON_KEY=$NEXT_PUBLIC_SUPABASE_ANON_KEY
ENV SUPABASE_SERVICE_ROLE_KEY=$SUPABASE_SERVICE_ROLE_KEY
ENV PUBLIC_VAPID_KEY=$PUBLIC_VAPID_KEY
ENV PRIVATE_VAPID_KEY=$PRIVATE_VAPID_KEY

RUN npm run build

# Stage 2: Production
FROM node:lts-alpine
RUN apk add --no-cache mysql-client
RUN npm install -g pm2
WORKDIR /app
COPY --from=builder /app/package*.json ./
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app ./
EXPOSE 3000
CMD ["pm2-runtime", "ecosystem.config.js"]
